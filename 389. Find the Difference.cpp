/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
*/

// Sorting
class Solution {
public:
    char findTheDifference(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());

        for (int i = 0; i < s.size(); i++){
            if (s[i] != t[i]) return t[i];
        }

        return t[t.size() - 1];
    }
};

// Using Hashmap
class Solution {
public:
    char findTheDifference(string s, string t) {
        unordered_map<char, int> mp;
        for (int i = 0; i < s.size(); i++)
            mp[s[i]]++;

        for (int i = 0; i < t.size(); i++){
            if (mp.count(t[i]) && mp[t[i]]) mp[t[i]]--;
            else return t[i];
        }

        return t[t.size() - 1];
    }
};

// Using XOR
class Solution {
public:
    char findTheDifference(string s, string t) {
        int result = 0;
        for (char c : s)
            result ^= c;
        for (char c : t)
            result ^= c;
        return result;
    }
};
